package com.rockwell.scl.filter.at;



/**
 * This file was generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */

import com.datasweep.compatibility.client.DatasweepException;
import com.datasweep.compatibility.client.MeasuredValue;
import com.datasweep.compatibility.client.Server;
import com.datasweep.compatibility.ui.Time;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;
import com.rockwell.mes.commons.base.ifc.objects.MESATObjectFilter;
import com.rockwell.mes.commons.base.ifc.services.PCContext;
import java.util.List;

/**
 * Generated filter class for application table SV_FilterInfo.
 */
public abstract class MESGeneratedSVFilterInfoFilter extends MESATObjectFilter implements IMESGeneratedSVFilterInfoFilter {

    /** Generated attribute definition */
    private static final long serialVersionUID = 1L;

    /** Generated attribute definition */
    protected static final String ATDEFINITION_NAME = "SV_FilterInfo";

    /**
     * Generated constructor
     * 
     * @param server The Server object
     */
    public MESGeneratedSVFilterInfoFilter(Server server) {
        super(server, ATDEFINITION_NAME);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedSVFilterInfoFilter() {
        this(PCContext.getServerImpl());
    }

    @Override
    public List<IMESSVFilterInfo> getFilteredObjects() {
        return MESATObject.getFilteredMESATObjectList(this, IMESSVFilterInfo.class);
    }

      @Override
      public IMESSVFilterInfoFilter forBatchContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_BATCH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forBatchEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_BATCH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forBatchNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_BATCH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forBatchStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_BATCH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forCommentsContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_COMMENTS, value);
      }

      @Override
      public IMESSVFilterInfoFilter forCommentsEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_COMMENTS, value);
      }

      @Override
      public IMESSVFilterInfoFilter forCommentsNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_COMMENTS, value);
      }

      @Override
      public IMESSVFilterInfoFilter forCommentsStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_COMMENTS, value);
      }

      @Override
      public IMESSVFilterInfoFilter forContinueUsableEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_CONTINUEUSABLE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forContinueUsableGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_CONTINUEUSABLE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forContinueUsableLessThan(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_CONTINUEUSABLE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forContinueUsableNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_CONTINUEUSABLE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forContinueUsableNoteContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_CONTINUEUSABLENOTE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forContinueUsableNoteEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_CONTINUEUSABLENOTE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forContinueUsableNoteNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_CONTINUEUSABLENOTE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forContinueUsableNoteStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_CONTINUEUSABLENOTE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forCurrentUsageCountContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_CURRENTUSAGECOUNT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forCurrentUsageCountEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_CURRENTUSAGECOUNT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forCurrentUsageCountNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_CURRENTUSAGECOUNT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forCurrentUsageCountStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_CURRENTUSAGECOUNT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterApertureEqualTo(MeasuredValue value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_FILTERAPERTURE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterApertureNotEqualTo(MeasuredValue value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_FILTERAPERTURE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterOpenDateEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_FILTEROPENDATE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterOpenDateGreaterThanOrEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_FILTEROPENDATE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterOpenDateLessThan(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_FILTEROPENDATE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterOpenDateNotEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_FILTEROPENDATE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterOpenDateExpirationEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_FILTEROPENDATEEXPIRATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterOpenDateExpirationGreaterThanOrEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_FILTEROPENDATEEXPIRATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterOpenDateExpirationLessThan(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_FILTEROPENDATEEXPIRATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterOpenDateExpirationNotEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_FILTEROPENDATEEXPIRATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterTypeContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_FILTERTYPE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterTypeEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_FILTERTYPE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterTypeNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_FILTERTYPE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forFilterTypeStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_FILTERTYPE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forHasCollectedAsConsumeEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_HASCOLLECTEDASCONSUME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forHasCollectedAsConsumeGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_HASCOLLECTEDASCONSUME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forHasCollectedAsConsumeLessThan(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_HASCOLLECTEDASCONSUME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forHasCollectedAsConsumeNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_HASCOLLECTEDASCONSUME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestDurationEqualTo(MeasuredValue value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTDURATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestDurationNotEqualTo(MeasuredValue value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTDURATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestExpirationEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTEXPIRATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestExpirationGreaterThanOrEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTEXPIRATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestExpirationLessThan(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTEXPIRATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestExpirationNotEqualTo(Time value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTEXPIRATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestNoteContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTNOTE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestNoteEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTNOTE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestNoteNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTNOTE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestNoteStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTNOTE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestResultContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTRESULT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestResultEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTRESULT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestResultNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTRESULT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestResultStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTRESULT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestValueEqualTo(MeasuredValue value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTVALUE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forIntegrityTestValueNotEqualTo(MeasuredValue value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_INTEGRITYTESTVALUE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forManufacturerContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_MANUFACTURER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forManufacturerEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_MANUFACTURER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forManufacturerNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_MANUFACTURER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forManufacturerStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_MANUFACTURER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMaterialNameContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_MATERIALNAME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMaterialNameEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_MATERIALNAME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMaterialNameNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_MATERIALNAME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMaterialNameStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_MATERIALNAME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMaterialNoContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_MATERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMaterialNoEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_MATERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMaterialNoNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_MATERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMaterialNoStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_MATERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMountEquipmentContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_MOUNTEQUIPMENT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMountEquipmentEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_MOUNTEQUIPMENT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMountEquipmentNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_MOUNTEQUIPMENT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMountEquipmentStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_MOUNTEQUIPMENT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMountLocationContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_MOUNTLOCATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMountLocationEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_MOUNTLOCATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMountLocationNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_MOUNTLOCATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forMountLocationStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_MOUNTLOCATION, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOperateTypeContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_OPERATETYPE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOperateTypeEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_OPERATETYPE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOperateTypeNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_OPERATETYPE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOperateTypeStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_OPERATETYPE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOperatorContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_OPERATOR, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOperatorEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_OPERATOR, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOperatorNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_OPERATOR, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOperatorStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_OPERATOR, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOrderNumberContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_ORDERNUMBER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOrderNumberEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_ORDERNUMBER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOrderNumberNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_ORDERNUMBER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forOrderNumberStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_ORDERNUMBER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProcessedMaterialNameContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_PROCESSEDMATERIALNAME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProcessedMaterialNameEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_PROCESSEDMATERIALNAME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProcessedMaterialNameNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_PROCESSEDMATERIALNAME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProcessedMaterialNameStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_PROCESSEDMATERIALNAME, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProcessedMaterialNoContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_PROCESSEDMATERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProcessedMaterialNoEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_PROCESSEDMATERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProcessedMaterialNoNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_PROCESSEDMATERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProcessedMaterialNoStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_PROCESSEDMATERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProductionLineContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_PRODUCTIONLINE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProductionLineEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_PRODUCTIONLINE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProductionLineNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_PRODUCTIONLINE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forProductionLineStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_PRODUCTIONLINE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forRecipePathContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_RECIPEPATH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forRecipePathEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_RECIPEPATH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forRecipePathNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_RECIPEPATH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forRecipePathStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_RECIPEPATH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSerialNoContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_SERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSerialNoEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_SERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSerialNoNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_SERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSerialNoStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_SERIALNO, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterBatchContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_STERBATCH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterBatchEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_STERBATCH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterBatchNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_STERBATCH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterBatchStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_STERBATCH, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterCountEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_STERCOUNT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterCountGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_STERCOUNT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterCountLessThan(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_STERCOUNT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterCountNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_STERCOUNT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterSerialNumberContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_STERSERIALNUMBER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterSerialNumberEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_STERSERIALNUMBER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterSerialNumberNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_STERSERIALNUMBER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterSerialNumberStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_STERSERIALNUMBER, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterUpLimitEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_STERUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterUpLimitGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_STERUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterUpLimitLessThan(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_STERUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSterUpLimitNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_STERUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSublotContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_SUBLOT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSublotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_SUBLOT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSublotNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_SUBLOT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSublotStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_SUBLOT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSvCodeContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_SVCODE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSvCodeEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_SVCODE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSvCodeNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_SVCODE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forSvCodeStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_SVCODE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUnqualifiedIntegrityQtyEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_UNQUALIFIEDINTEGRITYQTY, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUnqualifiedIntegrityQtyGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_UNQUALIFIEDINTEGRITYQTY, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUnqualifiedIntegrityQtyLessThan(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_UNQUALIFIEDINTEGRITYQTY, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUnqualifiedIntegrityQtyNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_UNQUALIFIEDINTEGRITYQTY, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUnqualifiedUpLimitEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_UNQUALIFIEDUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUnqualifiedUpLimitGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_UNQUALIFIEDUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUnqualifiedUpLimitLessThan(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_UNQUALIFIEDUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUnqualifiedUpLimitNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_UNQUALIFIEDUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUsageContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_USAGE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUsageEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_USAGE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUsageNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_USAGE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUsageStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_USAGE, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUsageCountUpLimitEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_USAGECOUNTUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUsageCountUpLimitGreaterThanOrEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameGreaterThanOrEqualTo(IMESSVFilterInfo.COL_NAME_USAGECOUNTUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUsageCountUpLimitLessThan(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameLessThan(IMESSVFilterInfo.COL_NAME_USAGECOUNTUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forUsageCountUpLimitNotEqualTo(Long value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_USAGECOUNTUPLIMIT, value);
      }

      @Override
      public IMESSVFilterInfoFilter forWorkshopContaining(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameContaining(IMESSVFilterInfo.COL_NAME_WORKSHOP, value);
      }

      @Override
      public IMESSVFilterInfoFilter forWorkshopEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameEqualTo(IMESSVFilterInfo.COL_NAME_WORKSHOP, value);
      }

      @Override
      public IMESSVFilterInfoFilter forWorkshopNotEqualTo(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameNotEqualTo(IMESSVFilterInfo.COL_NAME_WORKSHOP, value);
      }

      @Override
      public IMESSVFilterInfoFilter forWorkshopStartingWith(String value) //
              throws DatasweepException {
          return (IMESSVFilterInfoFilter) forColumnNameStartingWith(IMESSVFilterInfo.COL_NAME_WORKSHOP, value);
      }

}