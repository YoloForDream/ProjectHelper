package com.rockwell.scl.filter.at;



/**
 * This file is generated by ATDefAccessClassGenerator and FMPP 2.3.15
 *
 * Please do not modify this file manually !!
 */

import com.datasweep.compatibility.client.ATRow;
import com.datasweep.compatibility.client.MeasuredValue;
import com.datasweep.compatibility.client.Response;
import com.datasweep.compatibility.ui.Time;
import com.rockwell.mes.commons.base.ifc.objects.MESATObject;

/**
 * Generated class definition for application table SV_FilterInfo.<BR>
 * Application table description: 滤器表
 */
public abstract class MESGeneratedSVFilterInfo extends MESATObject //
        implements IMESGeneratedSVFilterInfo {

    @Override
    public String getATDefinitionName() {
        return ATDEFINITION_NAME;
    }

    /**
     * Generated constructor
     * 
     * @param key The key of the ATRow to load.
     */
    public MESGeneratedSVFilterInfo(long key) {
        super(key);
    }

    /**
     * Generated copy constructor
     * 
     * @param source The source to copy.
     */
    public MESGeneratedSVFilterInfo(MESGeneratedSVFilterInfo source) {
        super(source);
    }

    /**
     * Generated constructor
     * 
     * @param baseATRow The ATRow to wrap.
     */
    public MESGeneratedSVFilterInfo(ATRow baseATRow) {
        super(baseATRow);
    }

    /**
     * Generated default constructor
     */
    public MESGeneratedSVFilterInfo() {
        super();
    }

    @Override
    protected void synchronizeAfterATRowRefresh() {
        super.synchronizeAfterATRowRefresh();
    }

    @Override
    public String getBatch() {
        return (String) this.dgtATRow.getValue(COL_NAME_BATCH);
    }

    @Override
    public void setBatch(String value) {
        String oldValue = this.getBatch();
        this.dgtATRow.setValue(COL_NAME_BATCH, value);
        firePropertyChange(PROP_NAME_BATCH, oldValue, value);
    }

    @Override
    public String getComments() {
        return (String) this.dgtATRow.getValue(COL_NAME_COMMENTS);
    }

    @Override
    public void setComments(String value) {
        String oldValue = this.getComments();
        this.dgtATRow.setValue(COL_NAME_COMMENTS, value);
        firePropertyChange(PROP_NAME_COMMENTS, oldValue, value);
    }

    @Override
    public Long getContinueUsable() {
        return (Long) this.dgtATRow.getValue(COL_NAME_CONTINUEUSABLE);
    }

    @Override
    public void setContinueUsable(Long value) {
        Long oldValue = this.getContinueUsable();
        this.dgtATRow.setValue(COL_NAME_CONTINUEUSABLE, value);
        firePropertyChange(PROP_NAME_CONTINUEUSABLE, oldValue, value);
    }

    @Override
    public String getContinueUsableNote() {
        return (String) this.dgtATRow.getValue(COL_NAME_CONTINUEUSABLENOTE);
    }

    @Override
    public void setContinueUsableNote(String value) {
        String oldValue = this.getContinueUsableNote();
        this.dgtATRow.setValue(COL_NAME_CONTINUEUSABLENOTE, value);
        firePropertyChange(PROP_NAME_CONTINUEUSABLENOTE, oldValue, value);
    }

    @Override
    public String getCurrentUsageCount() {
        return (String) this.dgtATRow.getValue(COL_NAME_CURRENTUSAGECOUNT);
    }

    @Override
    public void setCurrentUsageCount(String value) {
        String oldValue = this.getCurrentUsageCount();
        this.dgtATRow.setValue(COL_NAME_CURRENTUSAGECOUNT, value);
        firePropertyChange(PROP_NAME_CURRENTUSAGECOUNT, oldValue, value);
    }

    @Override
    public MeasuredValue getFilterAperture() {
        return (MeasuredValue) this.dgtATRow.getValue(COL_NAME_FILTERAPERTURE);
    }

    @Override
    public void setFilterAperture(MeasuredValue value) {
        MeasuredValue oldValue = this.getFilterAperture();
        this.dgtATRow.setValue(COL_NAME_FILTERAPERTURE, value);
        firePropertyChange(PROP_NAME_FILTERAPERTURE, oldValue, value);
    }

    @Override
    public Time getFilterOpenDate() {
        return (Time) this.dgtATRow.getValue(COL_NAME_FILTEROPENDATE);
    }

    @Override
    public void setFilterOpenDate(Time value) {
        Time oldValue = this.getFilterOpenDate();
        this.dgtATRow.setValue(COL_NAME_FILTEROPENDATE, value);
        firePropertyChange(PROP_NAME_FILTEROPENDATE, oldValue, value);
    }

    @Override
    public Time getFilterOpenDateExpiration() {
        return (Time) this.dgtATRow.getValue(COL_NAME_FILTEROPENDATEEXPIRATION);
    }

    @Override
    public void setFilterOpenDateExpiration(Time value) {
        Time oldValue = this.getFilterOpenDateExpiration();
        this.dgtATRow.setValue(COL_NAME_FILTEROPENDATEEXPIRATION, value);
        firePropertyChange(PROP_NAME_FILTEROPENDATEEXPIRATION, oldValue, value);
    }

    @Override
    public String getFilterType() {
        return (String) this.dgtATRow.getValue(COL_NAME_FILTERTYPE);
    }

    @Override
    public void setFilterType(String value) {
        String oldValue = this.getFilterType();
        this.dgtATRow.setValue(COL_NAME_FILTERTYPE, value);
        firePropertyChange(PROP_NAME_FILTERTYPE, oldValue, value);
    }

    @Override
    public Long getHasCollectedAsConsume() {
        return (Long) this.dgtATRow.getValue(COL_NAME_HASCOLLECTEDASCONSUME);
    }

    @Override
    public void setHasCollectedAsConsume(Long value) {
        Long oldValue = this.getHasCollectedAsConsume();
        this.dgtATRow.setValue(COL_NAME_HASCOLLECTEDASCONSUME, value);
        firePropertyChange(PROP_NAME_HASCOLLECTEDASCONSUME, oldValue, value);
    }

    @Override
    public MeasuredValue getIntegrityTestDuration() {
        return (MeasuredValue) this.dgtATRow.getValue(COL_NAME_INTEGRITYTESTDURATION);
    }

    @Override
    public void setIntegrityTestDuration(MeasuredValue value) {
        MeasuredValue oldValue = this.getIntegrityTestDuration();
        this.dgtATRow.setValue(COL_NAME_INTEGRITYTESTDURATION, value);
        firePropertyChange(PROP_NAME_INTEGRITYTESTDURATION, oldValue, value);
    }

    @Override
    public Time getIntegrityTestExpiration() {
        return (Time) this.dgtATRow.getValue(COL_NAME_INTEGRITYTESTEXPIRATION);
    }

    @Override
    public void setIntegrityTestExpiration(Time value) {
        Time oldValue = this.getIntegrityTestExpiration();
        this.dgtATRow.setValue(COL_NAME_INTEGRITYTESTEXPIRATION, value);
        firePropertyChange(PROP_NAME_INTEGRITYTESTEXPIRATION, oldValue, value);
    }

    @Override
    public String getIntegrityTestNote() {
        return (String) this.dgtATRow.getValue(COL_NAME_INTEGRITYTESTNOTE);
    }

    @Override
    public void setIntegrityTestNote(String value) {
        String oldValue = this.getIntegrityTestNote();
        this.dgtATRow.setValue(COL_NAME_INTEGRITYTESTNOTE, value);
        firePropertyChange(PROP_NAME_INTEGRITYTESTNOTE, oldValue, value);
    }

    @Override
    public String getIntegrityTestResult() {
        return (String) this.dgtATRow.getValue(COL_NAME_INTEGRITYTESTRESULT);
    }

    @Override
    public void setIntegrityTestResult(String value) {
        String oldValue = this.getIntegrityTestResult();
        this.dgtATRow.setValue(COL_NAME_INTEGRITYTESTRESULT, value);
        firePropertyChange(PROP_NAME_INTEGRITYTESTRESULT, oldValue, value);
    }

    @Override
    public MeasuredValue getIntegrityTestValue() {
        return (MeasuredValue) this.dgtATRow.getValue(COL_NAME_INTEGRITYTESTVALUE);
    }

    @Override
    public void setIntegrityTestValue(MeasuredValue value) {
        MeasuredValue oldValue = this.getIntegrityTestValue();
        this.dgtATRow.setValue(COL_NAME_INTEGRITYTESTVALUE, value);
        firePropertyChange(PROP_NAME_INTEGRITYTESTVALUE, oldValue, value);
    }

    @Override
    public String getManufacturer() {
        return (String) this.dgtATRow.getValue(COL_NAME_MANUFACTURER);
    }

    @Override
    public void setManufacturer(String value) {
        String oldValue = this.getManufacturer();
        this.dgtATRow.setValue(COL_NAME_MANUFACTURER, value);
        firePropertyChange(PROP_NAME_MANUFACTURER, oldValue, value);
    }

    @Override
    public String getMaterialName() {
        return (String) this.dgtATRow.getValue(COL_NAME_MATERIALNAME);
    }

    @Override
    public void setMaterialName(String value) {
        String oldValue = this.getMaterialName();
        this.dgtATRow.setValue(COL_NAME_MATERIALNAME, value);
        firePropertyChange(PROP_NAME_MATERIALNAME, oldValue, value);
    }

    @Override
    public String getMaterialNo() {
        return (String) this.dgtATRow.getValue(COL_NAME_MATERIALNO);
    }

    @Override
    public void setMaterialNo(String value) {
        String oldValue = this.getMaterialNo();
        this.dgtATRow.setValue(COL_NAME_MATERIALNO, value);
        firePropertyChange(PROP_NAME_MATERIALNO, oldValue, value);
    }

    @Override
    public String getMountEquipment() {
        return (String) this.dgtATRow.getValue(COL_NAME_MOUNTEQUIPMENT);
    }

    @Override
    public void setMountEquipment(String value) {
        String oldValue = this.getMountEquipment();
        this.dgtATRow.setValue(COL_NAME_MOUNTEQUIPMENT, value);
        firePropertyChange(PROP_NAME_MOUNTEQUIPMENT, oldValue, value);
    }

    @Override
    public String getMountLocation() {
        return (String) this.dgtATRow.getValue(COL_NAME_MOUNTLOCATION);
    }

    @Override
    public void setMountLocation(String value) {
        String oldValue = this.getMountLocation();
        this.dgtATRow.setValue(COL_NAME_MOUNTLOCATION, value);
        firePropertyChange(PROP_NAME_MOUNTLOCATION, oldValue, value);
    }

    @Override
    public String getOperateType() {
        return (String) this.dgtATRow.getValue(COL_NAME_OPERATETYPE);
    }

    @Override
    public void setOperateType(String value) {
        String oldValue = this.getOperateType();
        this.dgtATRow.setValue(COL_NAME_OPERATETYPE, value);
        firePropertyChange(PROP_NAME_OPERATETYPE, oldValue, value);
    }

    @Override
    public String getOperator() {
        return (String) this.dgtATRow.getValue(COL_NAME_OPERATOR);
    }

    @Override
    public void setOperator(String value) {
        String oldValue = this.getOperator();
        this.dgtATRow.setValue(COL_NAME_OPERATOR, value);
        firePropertyChange(PROP_NAME_OPERATOR, oldValue, value);
    }

    @Override
    public String getOrderNumber() {
        return (String) this.dgtATRow.getValue(COL_NAME_ORDERNUMBER);
    }

    @Override
    public void setOrderNumber(String value) {
        String oldValue = this.getOrderNumber();
        this.dgtATRow.setValue(COL_NAME_ORDERNUMBER, value);
        firePropertyChange(PROP_NAME_ORDERNUMBER, oldValue, value);
    }

    @Override
    public String getProcessedMaterialName() {
        return (String) this.dgtATRow.getValue(COL_NAME_PROCESSEDMATERIALNAME);
    }

    @Override
    public void setProcessedMaterialName(String value) {
        String oldValue = this.getProcessedMaterialName();
        this.dgtATRow.setValue(COL_NAME_PROCESSEDMATERIALNAME, value);
        firePropertyChange(PROP_NAME_PROCESSEDMATERIALNAME, oldValue, value);
    }

    @Override
    public String getProcessedMaterialNo() {
        return (String) this.dgtATRow.getValue(COL_NAME_PROCESSEDMATERIALNO);
    }

    @Override
    public void setProcessedMaterialNo(String value) {
        String oldValue = this.getProcessedMaterialNo();
        this.dgtATRow.setValue(COL_NAME_PROCESSEDMATERIALNO, value);
        firePropertyChange(PROP_NAME_PROCESSEDMATERIALNO, oldValue, value);
    }

    @Override
    public String getProductionLine() {
        return (String) this.dgtATRow.getValue(COL_NAME_PRODUCTIONLINE);
    }

    @Override
    public void setProductionLine(String value) {
        String oldValue = this.getProductionLine();
        this.dgtATRow.setValue(COL_NAME_PRODUCTIONLINE, value);
        firePropertyChange(PROP_NAME_PRODUCTIONLINE, oldValue, value);
    }

    @Override
    public String getRecipePath() {
        return (String) this.dgtATRow.getValue(COL_NAME_RECIPEPATH);
    }

    @Override
    public void setRecipePath(String value) {
        String oldValue = this.getRecipePath();
        this.dgtATRow.setValue(COL_NAME_RECIPEPATH, value);
        firePropertyChange(PROP_NAME_RECIPEPATH, oldValue, value);
    }

    @Override
    public String getSerialNo() {
        return (String) this.dgtATRow.getValue(COL_NAME_SERIALNO);
    }

    @Override
    public void setSerialNo(String value) {
        String oldValue = this.getSerialNo();
        this.dgtATRow.setValue(COL_NAME_SERIALNO, value);
        firePropertyChange(PROP_NAME_SERIALNO, oldValue, value);
    }

    @Override
    public String getSterBatch() {
        return (String) this.dgtATRow.getValue(COL_NAME_STERBATCH);
    }

    @Override
    public void setSterBatch(String value) {
        String oldValue = this.getSterBatch();
        this.dgtATRow.setValue(COL_NAME_STERBATCH, value);
        firePropertyChange(PROP_NAME_STERBATCH, oldValue, value);
    }

    @Override
    public Long getSterCount() {
        return (Long) this.dgtATRow.getValue(COL_NAME_STERCOUNT);
    }

    @Override
    public void setSterCount(Long value) {
        Long oldValue = this.getSterCount();
        this.dgtATRow.setValue(COL_NAME_STERCOUNT, value);
        firePropertyChange(PROP_NAME_STERCOUNT, oldValue, value);
    }

    @Override
    public String getSterSerialNumber() {
        return (String) this.dgtATRow.getValue(COL_NAME_STERSERIALNUMBER);
    }

    @Override
    public void setSterSerialNumber(String value) {
        String oldValue = this.getSterSerialNumber();
        this.dgtATRow.setValue(COL_NAME_STERSERIALNUMBER, value);
        firePropertyChange(PROP_NAME_STERSERIALNUMBER, oldValue, value);
    }

    @Override
    public Long getSterUpLimit() {
        return (Long) this.dgtATRow.getValue(COL_NAME_STERUPLIMIT);
    }

    @Override
    public void setSterUpLimit(Long value) {
        Long oldValue = this.getSterUpLimit();
        this.dgtATRow.setValue(COL_NAME_STERUPLIMIT, value);
        firePropertyChange(PROP_NAME_STERUPLIMIT, oldValue, value);
    }

    @Override
    public String getSublot() {
        return (String) this.dgtATRow.getValue(COL_NAME_SUBLOT);
    }

    @Override
    public void setSublot(String value) {
        String oldValue = this.getSublot();
        this.dgtATRow.setValue(COL_NAME_SUBLOT, value);
        firePropertyChange(PROP_NAME_SUBLOT, oldValue, value);
    }

    @Override
    public String getSvCode() {
        return (String) this.dgtATRow.getValue(COL_NAME_SVCODE);
    }

    @Override
    public void setSvCode(String value) {
        String oldValue = this.getSvCode();
        this.dgtATRow.setValue(COL_NAME_SVCODE, value);
        firePropertyChange(PROP_NAME_SVCODE, oldValue, value);
    }

    @Override
    public Long getUnqualifiedIntegrityQty() {
        return (Long) this.dgtATRow.getValue(COL_NAME_UNQUALIFIEDINTEGRITYQTY);
    }

    @Override
    public void setUnqualifiedIntegrityQty(Long value) {
        Long oldValue = this.getUnqualifiedIntegrityQty();
        this.dgtATRow.setValue(COL_NAME_UNQUALIFIEDINTEGRITYQTY, value);
        firePropertyChange(PROP_NAME_UNQUALIFIEDINTEGRITYQTY, oldValue, value);
    }

    @Override
    public Long getUnqualifiedUpLimit() {
        return (Long) this.dgtATRow.getValue(COL_NAME_UNQUALIFIEDUPLIMIT);
    }

    @Override
    public void setUnqualifiedUpLimit(Long value) {
        Long oldValue = this.getUnqualifiedUpLimit();
        this.dgtATRow.setValue(COL_NAME_UNQUALIFIEDUPLIMIT, value);
        firePropertyChange(PROP_NAME_UNQUALIFIEDUPLIMIT, oldValue, value);
    }

    @Override
    public String getUsage() {
        return (String) this.dgtATRow.getValue(COL_NAME_USAGE);
    }

    @Override
    public void setUsage(String value) {
        String oldValue = this.getUsage();
        this.dgtATRow.setValue(COL_NAME_USAGE, value);
        firePropertyChange(PROP_NAME_USAGE, oldValue, value);
    }

    @Override
    public Long getUsageCountUpLimit() {
        return (Long) this.dgtATRow.getValue(COL_NAME_USAGECOUNTUPLIMIT);
    }

    @Override
    public void setUsageCountUpLimit(Long value) {
        Long oldValue = this.getUsageCountUpLimit();
        this.dgtATRow.setValue(COL_NAME_USAGECOUNTUPLIMIT, value);
        firePropertyChange(PROP_NAME_USAGECOUNTUPLIMIT, oldValue, value);
    }

    @Override
    public String getWorkshop() {
        return (String) this.dgtATRow.getValue(COL_NAME_WORKSHOP);
    }

    @Override
    public void setWorkshop(String value) {
        String oldValue = this.getWorkshop();
        this.dgtATRow.setValue(COL_NAME_WORKSHOP, value);
        firePropertyChange(PROP_NAME_WORKSHOP, oldValue, value);
    }

    @Override
    protected Response prepareATRowForSave() {
        // Check if transient references are valid and store the corresponding keys in the ATRow:
        Response res = super.prepareATRowForSave();



        return res;
    }

}